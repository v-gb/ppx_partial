# This file is generated by dune, edit dune-project instead
opam-version: "2.0"
synopsis:
  "Syntax for a partial application of functions that omits any argument"
description: """

This provides a syntax `f e1 __ e3` that's means `(fun x -> f e1 x e3)`,
except that `e1` and `e3` are evaluated just once.

This can be convenient in pipelines or to build arguments for `List.map`
or any places that need single-argument functions.

As a slight generalization, `__.record_field` and `Sum_constructor __`
allow shortening `fun x -> x.record_field` and `(fun x -> Sum_constructor x)`.
"""
maintainer: ["Valentin Gatien-Baron"]
authors: ["Valentin Gatien-Baron"]
license: "ISC"
tags: ["syntax" "ppx"]
homepage: "https://github.com/v-gb/ppx_partial"
bug-reports: "https://github.com/v-gb/ppx_partial/issues"
depends: [
  "ppxlib" {>= "0.32.1"}
  "ocaml"
  "dune" {>= "3.15"}
  "odoc" {with-doc}
]
build: [
  ["dune" "subst"] {dev}
  [
    "dune"
    "build"
    "-p"
    name
    "-j"
    jobs
    "@install"
    "@runtest" {with-test}
    "@doc" {with-doc}
  ]
]
dev-repo: "git+https://github.com/v-gb/ppx_partial.git"
